{"uid":"1215a85ee0904249","name":"Bejelentkezés regisztrált felhasználóval","fullName":"test_conduit_vizsgaremek.test_conduit.TestConduit#test_login","historyId":"69c194c39c7369ade38ea68e9974092e","time":{"start":1682274451081,"stop":1682274457454,"duration":6373},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555626e56fe3 <unknown>\n#1 0x555626b95d36 <unknown>\n#2 0x555626bd2c4d <unknown>\n#3 0x555626bd2d61 <unknown>\n#4 0x555626c0e6a4 <unknown>\n#5 0x555626bf38ed <unknown>\n#6 0x555626c0c232 <unknown>\n#7 0x555626bf3693 <unknown>\n#8 0x555626bc603a <unknown>\n#9 0x555626bc717e <unknown>\n#10 0x555626e18dbd <unknown>\n#11 0x555626e1cc6c <unknown>\n#12 0x555626e264b0 <unknown>\n#13 0x555626e1dd63 <unknown>\n#14 0x555626df0c35 <unknown>\n#15 0x555626e41138 <unknown>\n#16 0x555626e412c7 <unknown>\n#17 0x555626e4f093 <unknown>\n#18 0x7fa1ae586b43 <unknown>","statusTrace":"self = <test_conduit.TestConduit object at 0x7fbddcf9eb90>\n\n    @allure.title('Bejelentkezés regisztrált felhasználóval')\n    def test_login(self):\n        cookie_function(self.browser)\n    \n        # Bejelentkezés linkre kattintás\n        menu_login_btn = self.browser.find_element(By.LINK_TEXT, 'Sign in')\n        menu_login_btn.click()\n        # time.sleep(1)\n        assert self.browser.current_url == 'http://localhost:1667/#/login'\n    \n        # Tesztadatok beírása a megfelelő helyekre (data_for_imports.py fájlból)\n        email_input = self.browser.find_element(By.XPATH, '//input[@placeholder=\"Email\"]')\n        password_input = self.browser.find_element(By.XPATH, '//input[@type=\"password\"]')\n        sign_in_btn = self.browser.find_element(By.XPATH, '//button[contains(text(), \"Sign in\")]')\n    \n        email_input.send_keys(user_login['email'])\n        password_input.send_keys(user_login['password'])\n        sign_in_btn.click()\n    \n        # Megjelent a belépés utáni felhasználói felületen a logout link?\n        # menu_logout_btn = WebDriverWait(self.browser, 5).until(EC.presence_of_element_located((By.LINK_TEXT, 'Log out')))\n        # menu_logout_btn = WebDriverWait(self.browser, 15).until(\n        #     EC.presence_of_all_elements_located((By.XPATH, '//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]')))\n        # menu_logout_btn = WebDriverWait(self.browser, 15).until(\n        #     EC.presence_of_element_located((By.PARTIAL_LINK_TEXT, 'Log out')))\n        # assert menu_logout_btn.is_enabled()\n>       profile = WebDriverWait(self.browser, 5).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, 'a[href=\"#/@Testuser4/\"]')))\n\ntest_conduit_vizsgaremek/test_conduit.py:109: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"490ff5f42cf629b6baee46e9176ff754\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7fbddbe94550>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x555626e56fe3 <unknown>\nE       #1 0x555626b95d36 <unknown>\nE       #2 0x555626bd2c4d <unknown>\nE       #3 0x555626bd2d61 <unknown>\nE       #4 0x555626c0e6a4 <unknown>\nE       #5 0x555626bf38ed <unknown>\nE       #6 0x555626c0c232 <unknown>\nE       #7 0x555626bf3693 <unknown>\nE       #8 0x555626bc603a <unknown>\nE       #9 0x555626bc717e <unknown>\nE       #10 0x555626e18dbd <unknown>\nE       #11 0x555626e1cc6c <unknown>\nE       #12 0x555626e264b0 <unknown>\nE       #13 0x555626e1dd63 <unknown>\nE       #14 0x555626df0c35 <unknown>\nE       #15 0x555626e41138 <unknown>\nE       #16 0x555626e412c7 <unknown>\nE       #17 0x555626e4f093 <unknown>\nE       #18 0x7fa1ae586b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestConduit","time":{"start":1682274448068,"stop":1682274451081,"duration":3013},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"_xunit_setup_method_fixture_TestConduit::0","time":{"start":1682274457498,"stop":1682274457554,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"parentSuite","value":"test_conduit_vizsgaremek"},{"name":"suite","value":"test_conduit"},{"name":"subSuite","value":"TestConduit"},{"name":"host","value":"fv-az180-54"},{"name":"thread","value":"3048-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_conduit_vizsgaremek.test_conduit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1215a85ee0904249.json","parameterValues":[]}